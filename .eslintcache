[{"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\index.js":"1","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\reportWebVitals.js":"2","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\App.js":"3","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\main.js":"4","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\sales.js":"5","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\users.js":"6","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\dishes.js":"7","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\auth\\login.js":"8","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\header.js":"9","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\modals.js":"10","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\print.js":"11","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\tables.js":"12"},{"size":521,"mtime":1636207668627,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1636207668642,"results":"15","hashOfConfig":"14"},{"size":6340,"mtime":1636389881276,"results":"16","hashOfConfig":"14"},{"size":8406,"mtime":1636389578332,"results":"17","hashOfConfig":"14"},{"size":1213,"mtime":1636390075699,"results":"18","hashOfConfig":"14"},{"size":3744,"mtime":1636207668633,"results":"19","hashOfConfig":"14"},{"size":5453,"mtime":1636315038041,"results":"20","hashOfConfig":"14"},{"size":6376,"mtime":1636207668640,"results":"21","hashOfConfig":"14"},{"size":1897,"mtime":1636207668629,"results":"22","hashOfConfig":"14"},{"size":20600,"mtime":1636383034495,"results":"23","hashOfConfig":"14"},{"size":1329,"mtime":1636207668630,"results":"24","hashOfConfig":"14"},{"size":6172,"mtime":1636390237592,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1v189m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\index.js",[],["54","55"],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\reportWebVitals.js",[],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\App.js",[],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\main.js",["56"],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\sales.js",["57","58","59","60","61"],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\users.js",[],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\dishes.js",[],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\auth\\login.js",["62","63","64","65","66","67"],"import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\n\r\n// importing db files\r\nconst { remote } = require(\"electron\");\r\nconst usersInstance = remote.getGlobal(\"userStore\");\r\n\r\nfunction Login(props) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginType, setLoginType] = useState(false);\r\n  const [errMess, setErr] = useState(\"\");\r\n\r\n  const _handleLogin = () => {\r\n    if (userName === \"\" || password === \"\") {\r\n      setErr(\"Please both fileds are required!\");\r\n      setTimeout(() => {\r\n        setErr(\"\");\r\n      }, 3000);\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      setErr(\"Please password is too short!\");\r\n      setTimeout(() => {\r\n        setErr(\"\");\r\n      }, 3000);\r\n      return false;\r\n    } else {\r\n      usersInstance.readUser(userName).then((user) => {\r\n        if (user === null) {\r\n          setErr(\"User does not exist, please check user name or password!\");\r\n          setTimeout(() => {\r\n            setErr(\"\");\r\n          }, 3000);\r\n          return false;\r\n        } else {\r\n          localStorage.setItem(\"user\", JSON.stringify(user));\r\n          props.history.push(\"/main\");\r\n          setPassword(\"\");\r\n          setUserName(\"\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const _handleLoginAdmin = () => {\r\n    if (password === \"\") {\r\n      setErr(\"Password cannot be empty!\");\r\n      setTimeout(() => {\r\n        setErr(\"\");\r\n      }, 3000);\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      setErr(\"Password is too short!\");\r\n      setTimeout(() => {\r\n        setErr(\"\");\r\n      }, 3000);\r\n      return false;\r\n    } else {\r\n      usersInstance.readAdmin(password).then((admin) => {\r\n        if (admin === null) {\r\n          setErr(\"Admin does not exist, check password!\");\r\n          setTimeout(() => {\r\n            setErr(\"\");\r\n          }, 3000);\r\n          return false;\r\n        } else {\r\n          if (admin.role !== \"Admin\") {\r\n            setErr(\"You are not authorized to view this page!\");\r\n            setTimeout(() => {\r\n              setErr(\"\");\r\n            }, 3000);\r\n            return false;\r\n          } else {\r\n            props.history.push(\"/Accounts\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const Accounts = () => {\r\n    setLoginType(!loginType);\r\n  };\r\n\r\n  if (loginType) {\r\n    return (\r\n      <div id=\"login\">\r\n        <div className=\"login-container\">\r\n          <div>\r\n            <div className=\"login-card-top\">\r\n              <h2 style={{ backgroudColor: \"orange\", color: \"black\" }}>\r\n                FoodApp\r\n              </h2>\r\n              <i\r\n                className=\"fa fa-users  account__icon\"\r\n                type=\"button\"\r\n                role=\"button\"\r\n                onClick={() => Accounts()}\r\n              ></i>\r\n            </div>\r\n            <div>\r\n              <img\r\n                src=\"/assets/logo1.png\"\r\n                style={{ width: \"8rem\", height: \"6rem\" }}\r\n              />\r\n            </div>\r\n            {errMess === \"\" ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"log-err-mess\">{errMess}</div>\r\n            )}\r\n            <form className=\"my-form\">\r\n              <p>\r\n                <label>Password</label>\r\n                <input\r\n                  className=\"input-field\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </p>\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  role=\"button\"\r\n                  className=\"loginbtn\"\r\n                  onClick={() => _handleLoginAdmin()}\r\n                  type=\"button\"\r\n                  style={{\r\n                    width: \"90%\",\r\n                    height: \"3rem\",\r\n                    marginTop: \"2rem\",\r\n                    border: \"none\",\r\n                    borderRadius: \".5rem\",\r\n                  }}\r\n                >\r\n                  Admin Login\r\n                </button>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      // <div>\r\n      <div id=\"login\">\r\n        <div className=\"login-container\">\r\n          <div>\r\n            <div className=\"login-card-top\">\r\n              <h2 style={{ backgroudColor: \"orange\", color: \"black\" }}>\r\n                FoodApp\r\n              </h2>\r\n              <i\r\n                className=\"fa fa-lock  account__icon\"\r\n                type=\"button\"\r\n                role=\"button\"\r\n                onClick={() => Accounts()}\r\n              ></i>\r\n            </div>\r\n\r\n            <div>\r\n              <img\r\n                src=\"/assets/logo1.png\"\r\n                style={{ width: \"8rem\", height: \"6rem\" }}\r\n              />\r\n            </div>\r\n            {errMess === \"\" ? (\r\n              \"\"\r\n            ) : (\r\n              <div className=\"log-err-mess\">{errMess}</div>\r\n            )}\r\n            <form className=\"my-form\">\r\n              <p>\r\n                <label>User Name</label>\r\n                <input\r\n                  className=\"input-field\"\r\n                  type=\"text\"\r\n                  value={userName}\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n              </p>\r\n              <p>\r\n                <label>Password</label>\r\n                <input\r\n                  className=\"input-field\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </p>\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  role=\"button\"\r\n                  className=\"loginbtn\"\r\n                  onClick={() => _handleLogin()}\r\n                  type=\"button\"\r\n                  style={{\r\n                    width: \"90%\",\r\n                    height: \"3rem\",\r\n                    marginTop: \"2rem\",\r\n                    border: \"none\",\r\n                    borderRadius: \".5rem\",\r\n                  }}\r\n                >\r\n                  Login\r\n                </button>\r\n                {/* <label>Email</label> */}\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\header.js",["68","69"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../main.css\";\r\n\r\nfunction Header(props) {\r\n  if (props.title === \"admin\") {\r\n    return (\r\n      <div>\r\n        <div className=\"header-style\">\r\n          <img\r\n            src=\"/assets/logo1.png\"\r\n            style={{ width: \"60px\", height: \"60px\" }}\r\n          />\r\n          <div\r\n            className=\"dropdown \"\r\n            style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"90%\" }}\r\n          >\r\n            <div className=\"dropdown\">\r\n              <i\r\n                className=\"fa fa-ellipsis-v  dropbtn\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"1.5rem\",\r\n                  marginLeft: \"30px\",\r\n                }}\r\n              ></i>\r\n              <div className=\"dropdown-content\">\r\n                <Link to=\"/Sales\">\r\n                  <i className=\"fa fa-money-check-alt\"></i> Sales\r\n                </Link>\r\n                <Link to=\"/Dishes\">\r\n                  <i className=\"fa fa-hamburger\"></i> Dishes\r\n                </Link>\r\n                <Link to=\"/Accounts\">\r\n                  <i className=\"fa fa-users\"></i> Accounts\r\n                </Link>\r\n                <Link to=\"/\">\r\n                  <i className=\"fa fa-lock\"></i> Logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"header-style\">\r\n          <img\r\n            src=\"/assets/logo1.png\"\r\n            style={{ width: \"60px\", height: \"60px\" }}\r\n          />\r\n          {/* <p style={{textAlign: \"left\"}}>KIGALI HOTEL</p> */}\r\n          <Link to=\"/\" className=\"right\">\r\n            <i class=\"fa fa-lock\" style={{ float: \"flex-end\" }}></i>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\modals.js",["70","71"],"import \"../main.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter\r\n} from \"mdbreact\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Modals(props) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPass, setRepPass] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [err, setErr] = useState(false);\r\n\r\n  const _handleAddUser = check => {\r\n    if (check === \"add\") {\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        password,\r\n        repeatPass,\r\n        phone,\r\n        role\r\n      };\r\n      props.onAdd(data);\r\n    } else {\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        password,\r\n        phone,\r\n        role,\r\n        _id: props.row._id\r\n      };\r\n      props.onEdit(data);\r\n    }\r\n  };\r\n\r\n  const _handleAddDish = check => {\r\n    if (check === \"add-dish\") {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n        type: check\r\n      };\r\n      props.onAdd(data);\r\n    } else if (check === \"add-liquor\") {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n        type: check\r\n      };\r\n      props.onAdd(data);\r\n    } else if (check === \"add-beverage\") {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n        type: check\r\n      };\r\n      props.onAdd(data);\r\n    } else {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n        _id: props.row._id,\r\n        type: check\r\n      };\r\n      props.onEdit(data);\r\n    }\r\n  };\r\n\r\n  const _handleDelete = data => {\r\n    props.onDelete(data);\r\n  };\r\n\r\n  const _dishPrice = dish => {\r\n    const price = parseInt(dish.price) * parseInt(dish.quantity);\r\n    return price;\r\n  };\r\n\r\n  const _totalQuantity = data => {\r\n    let qt = 0;\r\n    data.forEach(dish => {\r\n      qt += parseInt(dish.quantity);\r\n    });\r\n    return qt;\r\n  };\r\n\r\n  const _totalPrice = data => {\r\n    let tprice = 0;\r\n    data.forEach(dish => {\r\n      let price = parseInt(dish.price) * parseInt(dish.quantity);\r\n      tprice += price;\r\n    });\r\n    return tprice;\r\n  };\r\n\r\n  if (props.title === \"add-user\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleUser}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleUser(\"add-user\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD USER</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>User Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Repeat Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setRepPass(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <label>Select Role</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={e => setRole(e.target.value)}\r\n                  >\r\n                    <option>Select Role</option>\r\n                    <option>Admin</option>\r\n                    <option>Employee</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleUser(\"add-user\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={() => _handleAddUser(\"add\")}\r\n            >\r\n              Create User\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"edit-user\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleUser}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleUser(\"edit-user\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT USER</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>First Name: {props.row.firstName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Last Name: {props.row.lastName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>User Name: {props.row.userName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Phone: {props.row.phone}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Password: {props.row.password}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Select Role: {props.row.role}</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={e => setRole(e.target.value)}\r\n                  >\r\n                    <option>Select Role</option>\r\n                    <option>Admin</option>\r\n                    <option>Employee</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleUser(\"edit-user\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddUser(\"edit\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => _handleDelete(props.row._id)}\r\n            >\r\n              Delete User\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"add-dish\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"add-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD DISH</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Dish Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"add-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"add-dish\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (\r\n    props.title === \"edit-dish\" ||\r\n    props.title === \"edit-liquor\" ||\r\n    props.title === \"edit-beverage\"\r\n  ) {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"edit-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT SELECTION</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>\r\n                    Name:{\" \"}\r\n                    {props.row.dishName ||\r\n                      props.row.liqureName ||\r\n                      props.row.beverageName}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price: {props.row.price}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"edit-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                if (props.title === \"edit-dish\") {\r\n                  _handleAddDish(\"edit-dish\");\r\n                } else if (props.title === \"edit-beverage\") {\r\n                  _handleAddDish(\"edit-beverage\");\r\n                } else {\r\n                  _handleAddDish(\"edit-liquor\");\r\n                }\r\n              }}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => {\r\n                if (props.title === \"edit-dish\") {\r\n                  const data = {\r\n                    _id: props.row._id,\r\n                    type: \"delete-dish\"\r\n                  };\r\n                  _handleDelete(data);\r\n                } else if (props.title === \"edit-beverage\") {\r\n                  const data = {\r\n                    _id: props.row._id,\r\n                    type: \"delete-beverage\"\r\n                  };\r\n                  _handleDelete(data);\r\n                } else {\r\n                  const data = {\r\n                    _id: props.row._id,\r\n                    type: \"delete-liquor\"\r\n                  };\r\n                  _handleDelete(data);\r\n                }\r\n              }}\r\n            >\r\n              Delete Item\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"cart-modal\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleModal}\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleModal()}\r\n          >\r\n            CART\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className=\"car-header\">\r\n              <div className=\"cart-name\">Item Name</div>\r\n              <div className=\"cart-number\">Number Of Parcks</div>\r\n              <div className=\"cart-price\">Price(GHC)</div>\r\n              <div className=\"cart-remove-h\">Remove</div>\r\n            </div>\r\n            {props.data.map(item => {\r\n              return (\r\n                <div className=\"cart-body\">\r\n                  <div className=\"cart-name\">\r\n                    {item.dishName || item.liqureName || item.beverageName}\r\n                  </div>\r\n                  <div className=\"cart-number\">{item.quantity}</div>\r\n                  <div className=\"cart-price\">{_dishPrice(item)}</div>\r\n                  <div\r\n                    className=\"cart-remove\"\r\n                    type=\"button\"\r\n                    role=\"button\"\r\n                    onClick={() => props.onRemove(item._id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-alt\"></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"cart-body\">\r\n              <div className=\"cart-total\">Totals</div>\r\n              <div className=\"cart-number-t\">{_totalQuantity(props.data)}</div>\r\n              <div className=\"cart-price-t\">{_totalPrice(props.data)}</div>\r\n            </div>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleModal()}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => props.onBuy()}\r\n              style={{ paddding: \"2rem\", backgroupColor: \"red\" }}\r\n            >\r\n              Buy\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => props.onClear()}\r\n            >\r\n              Clear Cart\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"add-liquor\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"add-liquor\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD LIQUOR</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Liquor Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"add-liquor\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"add-liquor\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"add-beverage\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"add-beverage\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD BEVERAGE</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Beverage Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"add-beverage\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"add-beverage\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\print.js",[],"C:\\Users\\ILYASEEN19\\Documents\\projects\\food\\src\\main\\app\\component\\tables.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":17,"column":17,"nodeType":"78","messageId":"79","endLine":17,"endColumn":25},{"ruleId":"76","severity":1,"message":"80","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":14},{"ruleId":"76","severity":1,"message":"81","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":15},{"ruleId":"76","severity":1,"message":"82","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":20},{"ruleId":"76","severity":1,"message":"83","line":10,"column":22,"nodeType":"78","messageId":"79","endLine":10,"endColumn":35},{"ruleId":"76","severity":1,"message":"84","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":102,"column":15,"nodeType":"87","endLine":105,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":123,"column":17,"nodeType":"87","endLine":136,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":128,"column":19,"nodeType":"92","endLine":128,"endColumn":32},{"ruleId":"85","severity":1,"message":"86","line":164,"column":15,"nodeType":"87","endLine":167,"endColumn":17},{"ruleId":"88","severity":1,"message":"89","line":194,"column":17,"nodeType":"87","endLine":207,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":199,"column":19,"nodeType":"92","endLine":199,"endColumn":32},{"ruleId":"85","severity":1,"message":"86","line":10,"column":11,"nodeType":"87","endLine":13,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":50,"column":11,"nodeType":"87","endLine":53,"endColumn":13},{"ruleId":"76","severity":1,"message":"93","line":22,"column":10,"nodeType":"78","messageId":"79","endLine":22,"endColumn":13},{"ruleId":"76","severity":1,"message":"94","line":22,"column":15,"nodeType":"78","messageId":"79","endLine":22,"endColumn":21},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'setPrint' is assigned a value but never used.","Identifier","unusedVar","'Modals' is defined but never used.","'title' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'row' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]