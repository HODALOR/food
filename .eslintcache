[{"D:\\reactjs\\food\\src\\index.js":"1","D:\\reactjs\\food\\src\\reportWebVitals.js":"2","D:\\reactjs\\food\\src\\App.js":"3","D:\\reactjs\\food\\src\\main\\app\\main.js":"4","D:\\reactjs\\food\\src\\main\\app\\dishes.js":"5","D:\\reactjs\\food\\src\\main\\app\\sales.js":"6","D:\\reactjs\\food\\src\\main\\app\\users.js":"7","D:\\reactjs\\food\\src\\main\\auth\\login.js":"8","D:\\reactjs\\food\\src\\main\\app\\component\\modals.js":"9","D:\\reactjs\\food\\src\\main\\app\\component\\header.js":"10","D:\\reactjs\\food\\src\\main\\app\\component\\tables.js":"11"},{"size":503,"mtime":1625116386950,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1625088845938,"results":"14","hashOfConfig":"13"},{"size":3357,"mtime":1625572536298,"results":"15","hashOfConfig":"13"},{"size":1375,"mtime":1625476772768,"results":"16","hashOfConfig":"13"},{"size":2562,"mtime":1625489810231,"results":"17","hashOfConfig":"13"},{"size":1547,"mtime":1625572574077,"results":"18","hashOfConfig":"13"},{"size":3744,"mtime":1625481021928,"results":"19","hashOfConfig":"13"},{"size":5508,"mtime":1625491420176,"results":"20","hashOfConfig":"13"},{"size":14391,"mtime":1625571881599,"results":"21","hashOfConfig":"13"},{"size":1511,"mtime":1625499373262,"results":"22","hashOfConfig":"13"},{"size":3844,"mtime":1625571916109,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1duhpvi",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\reactjs\\food\\src\\index.js",[],["51","52"],"D:\\reactjs\\food\\src\\reportWebVitals.js",[],"D:\\reactjs\\food\\src\\App.js",[],"D:\\reactjs\\food\\src\\main\\app\\main.js",["53","54"],"import React from \"react\";\r\nimport Header from \"./component/header\";\r\nimport \"./main.css\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Main(props) {\r\n  const data = props.dishes;\r\n  const user = props.user;\r\n  return (\r\n    <div>\r\n      <Header title=\"main-paige\" />\r\n      <div className=\"main__card\">\r\n        <div\r\n          style={{\r\n            width: \"95%\",\r\n            margin: \"1%\",\r\n            height: \"85vh\",\r\n            justifyContent: \"center\",\r\n            backgroundImage: `url(/assets/dish1.jpg)`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <h1>RESTAURANT NAME</h1>\r\n          <div className=\"select\">\r\n            <select>\r\n              <option>Select dish...</option>\r\n              {data.map((dish) => {\r\n                return <option>{dish.dishName}</option>;\r\n              })}\r\n            </select>\r\n            <div className=\"prices\">GHC</div>\r\n            <button type=\"button\" role=\"button\" className=\"add\">\r\n              <i className=\"fa fa-cart-plus\"></i> Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","D:\\reactjs\\food\\src\\main\\app\\dishes.js",[],"D:\\reactjs\\food\\src\\main\\app\\sales.js",["55","56"],"D:\\reactjs\\food\\src\\main\\app\\users.js",[],"D:\\reactjs\\food\\src\\main\\auth\\login.js",["57","58","59","60","61","62"],"import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\n\r\n// importing db files\r\nconst { remote } = require(\"electron\");\r\nconst usersInstance = remote.getGlobal(\"userStore\");\r\n\r\nfunction Login(props) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginType, setLoginType] = useState(false);\r\n\r\n  const _handleLogin = () => {\r\n    if (userName === \"\" || password === \"\") {\r\n      alert(\"Please both fileds are required!\");\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      alert(\"Please password is too short!\");\r\n      return false;\r\n    } else {\r\n      usersInstance.readUser(userName).then((user) => {\r\n        if (user === null) {\r\n          alert(\"User does not exist, please check user name or password\");\r\n          return false;\r\n        } else {\r\n          props.data(user);\r\n          props.history.push(\"/main\");\r\n          setPassword(\"\");\r\n          setUserName(\"\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const _handleLoginAdmin = () => {\r\n    if (password === \"\") {\r\n      alert(\"Password cannot be empty\");\r\n      return false;\r\n    } else if (password.length < 6) {\r\n      alert(\"Password is too short!\");\r\n      return false;\r\n    } else {\r\n      usersInstance.readAdmin(password).then((admin) => {\r\n        if (admin === null) {\r\n          alert(\"Admin does not exist, check password!\");\r\n          return false;\r\n        } else {\r\n          if (admin.role !== \"Admin\") {\r\n            alert(\"You are not authorized to view this page!\");\r\n            return false;\r\n          } else {\r\n            props.history.push(\"/Accounts\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const Accounts = () => {\r\n    setLoginType(!loginType);\r\n  };\r\n\r\n  if (loginType) {\r\n    return (\r\n      <div id=\"login\">\r\n        <div className=\"login-container\">\r\n          <div>\r\n            <div className=\"login-card-top\">\r\n              <h2 style={{ backgroudColor: \"orange\", color: \"black\" }}>\r\n                FoodApp\r\n              </h2>\r\n              <i\r\n                className=\"fa fa-users  account__icon\"\r\n                type=\"button\"\r\n                role=\"button\"\r\n                onClick={() => Accounts()}\r\n              ></i>\r\n            </div>\r\n\r\n            <div>\r\n              <img\r\n                src=\"/assets/logo1.png\"\r\n                style={{ width: \"8rem\", height: \"6rem\" }}\r\n              />\r\n            </div>\r\n            <form className=\"my-form\">\r\n              <p>\r\n                <label>Password</label>\r\n                <input\r\n                  className=\"input-field\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </p>\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  role=\"button\"\r\n                  className=\"loginbtn\"\r\n                  onClick={() => _handleLoginAdmin()}\r\n                  type=\"button\"\r\n                  style={{\r\n                    width: \"90%\",\r\n                    height: \"3rem\",\r\n                    marginTop: \"2rem\",\r\n                    border: \"none\",\r\n                    borderRadius: \".5rem\",\r\n                  }}\r\n                >\r\n                  Admin Login\r\n                </button>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      // <div>\r\n      <div id=\"login\">\r\n        <div className=\"login-container\">\r\n          <div>\r\n            <div className=\"login-card-top\">\r\n              <h2 style={{ backgroudColor: \"orange\", color: \"black\" }}>\r\n                FoodApp\r\n              </h2>\r\n              <i\r\n                className=\"fa fa-lock  account__icon\"\r\n                type=\"button\"\r\n                role=\"button\"\r\n                onClick={() => Accounts()}\r\n              ></i>\r\n            </div>\r\n\r\n            <div>\r\n              <img\r\n                src=\"/assets/logo1.png\"\r\n                style={{ width: \"8rem\", height: \"6rem\" }}\r\n              />\r\n            </div>\r\n            <form className=\"my-form\">\r\n              <p>\r\n                <label>User Name</label>\r\n                <input\r\n                  className=\"input-field\"\r\n                  type=\"text\"\r\n                  value={userName}\r\n                  onChange={(e) => setUserName(e.target.value)}\r\n                />\r\n              </p>\r\n              <p>\r\n                <label>Password</label>\r\n                <input\r\n                  className=\"input-field\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </p>\r\n              <p>\r\n                <button\r\n                  type=\"button\"\r\n                  role=\"button\"\r\n                  className=\"loginbtn\"\r\n                  onClick={() => _handleLogin()}\r\n                  type=\"button\"\r\n                  style={{\r\n                    width: \"90%\",\r\n                    height: \"3rem\",\r\n                    marginTop: \"2rem\",\r\n                    border: \"none\",\r\n                    borderRadius: \".5rem\",\r\n                  }}\r\n                >\r\n                  Login\r\n                </button>\r\n                {/* <label>Email</label> */}\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","D:\\reactjs\\food\\src\\main\\app\\component\\modals.js",["63","64"],"import \"../main.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Modals(props) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPass, setRepPass] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [err, setErr] = useState(false);\r\n\r\n  const _handleAddUser = (check) => {\r\n    if (check === \"add\") {\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        password,\r\n        repeatPass,\r\n        phone,\r\n        role,\r\n      };\r\n      props.onAdd(data);\r\n    } else {\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        password,\r\n        phone,\r\n        role,\r\n        _id: props.row._id,\r\n      };\r\n      props.onEdit(data);\r\n    }\r\n  };\r\n\r\n  const _handleAddDish = (check) => {\r\n    if (check === \"add-dish\") {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n      };\r\n      props.onAdd(data);\r\n    } else {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n        _id: props.row._id,\r\n      };\r\n      props.onEdit(data);\r\n    }\r\n  };\r\n\r\n  const _handleDelete = (id) => {\r\n    props.onDelete(id);\r\n  };\r\n\r\n  if (props.title === \"add-user\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleUser}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleUser(\"add-user\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD USER</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>User Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Repeat Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setRepPass(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <label>Select Role</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  >\r\n                    <option>Select Role</option>\r\n                    <option>Admin</option>\r\n                    <option>Employee</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleUser(\"add-user\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={() => _handleAddUser(\"add\")}\r\n            >\r\n              Create User\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"edit-user\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleUser}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleUser(\"edit-user\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT USER</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>First Name: {props.row.firstName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Last Name: {props.row.lastName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>User Name: {props.row.userName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Phone: {props.row.phone}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Password: {props.row.password}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Select Role: {props.row.role}</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  >\r\n                    <option>Select Role</option>\r\n                    <option>Admin</option>\r\n                    <option>Employee</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleUser(\"edit-user\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddUser(\"edit\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => _handleDelete(props.row._id)}\r\n            >\r\n              Delete User\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"add-dish\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"add-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD DISH</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Dish Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"add-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"add-dish\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"edit-dish\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"edit-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT DISH</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Dish Name: {props.row.dishName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price: {props.row.price}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"edit-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"edit-dish\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleDelete(props.row._id)}\r\n            >\r\n              Delete Dish\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"sales-modal\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"edit-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT DISH</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Dish Name: {props.row.dishName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price: {props.row.price}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"edit-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"edit-dish\")}\r\n            >\r\n              Print\r\n            </MDBBtn>\r\n            {/* <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleDelete(props.row._id)}\r\n            >\r\n              Delete Dish\r\n            </MDBBtn> */}\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n","D:\\reactjs\\food\\src\\main\\app\\component\\header.js",["65","66"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../main.css\";\r\n\r\nfunction Header(props) {\r\n  if (props.title === \"admin\") {\r\n    return (\r\n      <div>\r\n        <div className=\"header-style\">\r\n          <img\r\n            src=\"/assets/logo1.png\"\r\n            style={{ width: \"60px\", height: \"60px\" }}\r\n          />\r\n          <div className=\"dropdown \" style={{display:\"flex\", alignItems:\"center\", marginLeft:\"90%\"}}>\r\n            <div className=\"dropdown\" >\r\n              <i\r\n                className=\"fa fa-ellipsis-v  dropbtn\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"1.5rem\",\r\n                  marginLeft: \"30px\",\r\n                \r\n                }}\r\n              ></i>\r\n              <div className=\"dropdown-content\">\r\n                <Link to=\"/Sales\">Sales</Link>\r\n                <Link to=\"/Dishes\">Dishes</Link>\r\n                <Link to=\"/Accounts\">Accounts</Link>\r\n                <Link to=\"/\">Logout</Link>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"header-style\">\r\n          <img\r\n            src=\"/assets/logo1.png\"\r\n            style={{ width: \"60px\", height: \"60px\" }}\r\n          />\r\n          <div className=\"right\">\r\n            <i class=\"fa fa-cart-plus\" style={{ float: \"flex-end\" }}></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","D:\\reactjs\\food\\src\\main\\app\\component\\tables.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":9,"nodeType":"73","messageId":"74","endLine":9,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":36,"column":13,"nodeType":"77","endLine":36,"endColumn":65},{"ruleId":"71","severity":1,"message":"78","line":10,"column":10,"nodeType":"73","messageId":"74","endLine":10,"endColumn":20},{"ruleId":"71","severity":1,"message":"79","line":10,"column":22,"nodeType":"73","messageId":"74","endLine":10,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":81,"column":15,"nodeType":"77","endLine":84,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":97,"column":17,"nodeType":"77","endLine":110,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":102,"column":19,"nodeType":"84","endLine":102,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":138,"column":15,"nodeType":"77","endLine":141,"endColumn":17},{"ruleId":"75","severity":1,"message":"76","line":163,"column":17,"nodeType":"77","endLine":176,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":168,"column":19,"nodeType":"84","endLine":168,"endColumn":32},{"ruleId":"71","severity":1,"message":"85","line":22,"column":10,"nodeType":"73","messageId":"74","endLine":22,"endColumn":13},{"ruleId":"71","severity":1,"message":"86","line":22,"column":15,"nodeType":"73","messageId":"74","endLine":22,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":10,"column":11,"nodeType":"77","endLine":13,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":41,"column":11,"nodeType":"77","endLine":44,"endColumn":13},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]