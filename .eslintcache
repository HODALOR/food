[{"D:\\reactjs\\rest\\food\\src\\index.js":"1","D:\\reactjs\\rest\\food\\src\\App.js":"2","D:\\reactjs\\rest\\food\\src\\reportWebVitals.js":"3","D:\\reactjs\\rest\\food\\src\\main\\app\\sales.js":"4","D:\\reactjs\\rest\\food\\src\\main\\app\\main.js":"5","D:\\reactjs\\rest\\food\\src\\main\\app\\users.js":"6","D:\\reactjs\\rest\\food\\src\\main\\app\\dishes.js":"7","D:\\reactjs\\rest\\food\\src\\main\\auth\\login.js":"8","D:\\reactjs\\rest\\food\\src\\main\\app\\component\\header.js":"9","D:\\reactjs\\rest\\food\\src\\main\\app\\component\\tables.js":"10","D:\\reactjs\\rest\\food\\src\\main\\app\\component\\modals.js":"11","D:\\reactjs\\rest\\food\\src\\main\\app\\component\\print.js":"12"},{"size":521,"mtime":1625589396089,"results":"13","hashOfConfig":"14"},{"size":3655,"mtime":1625589396088,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1625589396133,"results":"16","hashOfConfig":"14"},{"size":1214,"mtime":1625589396117,"results":"17","hashOfConfig":"14"},{"size":4481,"mtime":1625673125766,"results":"18","hashOfConfig":"14"},{"size":3744,"mtime":1625589396117,"results":"19","hashOfConfig":"14"},{"size":2562,"mtime":1625589396114,"results":"20","hashOfConfig":"14"},{"size":5542,"mtime":1625663471778,"results":"21","hashOfConfig":"14"},{"size":1830,"mtime":1625589396113,"results":"22","hashOfConfig":"14"},{"size":3835,"mtime":1625589396114,"results":"23","hashOfConfig":"14"},{"size":15288,"mtime":1625591157087,"results":"24","hashOfConfig":"14"},{"size":1329,"mtime":1625672993397,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"11qh6m9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\reactjs\\rest\\food\\src\\index.js",[],["54","55"],"D:\\reactjs\\rest\\food\\src\\App.js",[],"D:\\reactjs\\rest\\food\\src\\reportWebVitals.js",[],"D:\\reactjs\\rest\\food\\src\\main\\app\\sales.js",["56","57","58","59","60"],"import { useState } from \"react\";\r\nimport \"./main.css\";\r\nimport Header from \"./component/header\";\r\nimport Tables from \"./component/tables\";\r\nimport Modals from \"./component/modals\";\r\n\r\nfunction Sales(props) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"sales-modal\");\r\n  const [errMessage, setErrMessage] = useState(\"\");\r\n  const [row, setRow] = useState({});\r\n  const toggleDish = (check) => {\r\n    if (check === \"add-dish\") {\r\n      setTitle(check);\r\n      setIsOpen(!isOpen);\r\n    } else {\r\n      setTitle(check);\r\n      setIsOpen(!isOpen);\r\n    }\r\n  };\r\n  const _handleRowClick = (data) => {\r\n    setRow(data);\r\n    toggleDish(\"edit-dish\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Header title=\"admin\" />\r\n      <div className=\"accounts\">\r\n        <div className=\"my-card\">\r\n          <div className=\"table-title\">Dishes List</div>\r\n          <div>\r\n            <div className=\"my-card-body\">\r\n              <Tables\r\n                data={props.sales}\r\n                title=\"sales-table\"\r\n                onRowClicked={_handleRowClick}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sales;\r\n","D:\\reactjs\\rest\\food\\src\\main\\app\\main.js",[],"D:\\reactjs\\rest\\food\\src\\main\\app\\users.js",[],"D:\\reactjs\\rest\\food\\src\\main\\app\\dishes.js",[],"D:\\reactjs\\rest\\food\\src\\main\\auth\\login.js",["61","62","63","64","65","66"],"D:\\reactjs\\rest\\food\\src\\main\\app\\component\\header.js",["67","68"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../main.css\";\r\n\r\nfunction Header(props) {\r\n  if (props.title === \"admin\") {\r\n    return (\r\n      <div>\r\n        <div className=\"header-style\">\r\n          <img\r\n            src=\"/assets/logo1.png\"\r\n            style={{ width: \"60px\", height: \"60px\" }}\r\n          />\r\n          <div\r\n            className=\"dropdown \"\r\n            style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"90%\" }}\r\n          >\r\n            <div className=\"dropdown\">\r\n              <i\r\n                className=\"fa fa-ellipsis-v  dropbtn\"\r\n                style={{\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"1.5rem\",\r\n                  marginLeft: \"30px\",\r\n                }}\r\n              ></i>\r\n              <div className=\"dropdown-content\">\r\n                <Link to=\"/Sales\">\r\n                  <i className=\"fa fa-money-check-alt\"></i> Sales\r\n                </Link>\r\n                <Link to=\"/Dishes\">\r\n                  <i className=\"fa fa-hamburger\"></i> Dishes\r\n                </Link>\r\n                <Link to=\"/Accounts\">\r\n                  <i className=\"fa fa-users\"></i> Accounts\r\n                </Link>\r\n                <Link to=\"/\">\r\n                  <i className=\"fa fa-lock\"></i> Logout\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div className=\"header-style\">\r\n          <img\r\n            src=\"/assets/logo1.png\"\r\n            style={{ width: \"60px\", height: \"60px\" }}\r\n          />\r\n          <Link to=\"/\" className=\"right\">\r\n            <i class=\"fa fa-lock\" style={{ float: \"flex-end\" }}></i>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","D:\\reactjs\\rest\\food\\src\\main\\app\\component\\tables.js",[],"D:\\reactjs\\rest\\food\\src\\main\\app\\component\\modals.js",["69","70"],"import \"../main.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport {\r\n  MDBContainer,\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n} from \"mdbreact\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Modals(props) {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPass, setRepPass] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [err, setErr] = useState(false);\r\n\r\n  const _handleAddUser = (check) => {\r\n    if (check === \"add\") {\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        password,\r\n        repeatPass,\r\n        phone,\r\n        role,\r\n      };\r\n      props.onAdd(data);\r\n    } else {\r\n      const data = {\r\n        firstName,\r\n        lastName,\r\n        userName,\r\n        password,\r\n        phone,\r\n        role,\r\n        _id: props.row._id,\r\n      };\r\n      props.onEdit(data);\r\n    }\r\n  };\r\n\r\n  const _handleAddDish = (check) => {\r\n    if (check === \"add-dish\") {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n      };\r\n      props.onAdd(data);\r\n    } else {\r\n      const data = {\r\n        dishName: firstName,\r\n        price: phone,\r\n        _id: props.row._id,\r\n      };\r\n      props.onEdit(data);\r\n    }\r\n  };\r\n\r\n  const _handleDelete = (id) => {\r\n    props.onDelete(id);\r\n  };\r\n\r\n  const _dishPrice = (dish) => {\r\n    const price = parseInt(dish.price) * parseInt(dish.quantity);\r\n    return price;\r\n  };\r\n\r\n  const _totalQuantity = (data) => {\r\n    let qt = 0;\r\n    data.forEach((dish) => {\r\n      qt += parseInt(dish.quantity);\r\n    });\r\n    return qt;\r\n  };\r\n\r\n  const _totalPrice = (data) => {\r\n    let tprice = 0;\r\n    data.forEach((dish) => {\r\n      let price = parseInt(dish.price) * parseInt(dish.quantity);\r\n      tprice += price;\r\n    });\r\n    return tprice;\r\n  };\r\n\r\n  if (props.title === \"add-user\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleUser}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleUser(\"add-user\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD USER</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>First Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Last Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>User Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Phone</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Repeat Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setRepPass(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <label>Select Role</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  >\r\n                    <option>Select Role</option>\r\n                    <option>Admin</option>\r\n                    <option>Employee</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleUser(\"add-user\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-primary btn-sm\"\r\n              onClick={() => _handleAddUser(\"add\")}\r\n            >\r\n              Create User\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"edit-user\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleUser}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleUser(\"edit-user\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT USER</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>First Name: {props.row.firstName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Last Name: {props.row.lastName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>User Name: {props.row.userName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setUserName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Phone: {props.row.phone}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Password: {props.row.password}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Select Role: {props.row.role}</label>\r\n                  <select\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setRole(e.target.value)}\r\n                  >\r\n                    <option>Select Role</option>\r\n                    <option>Admin</option>\r\n                    <option>Employee</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleUser(\"edit-user\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddUser(\"edit\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => _handleDelete(props.row._id)}\r\n            >\r\n              Delete User\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"add-dish\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"add-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>ADD DISH</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Dish Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"add-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"add-dish\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"edit-dish\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleDish}\r\n          size=\"lg\"\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleDish(\"edit-dish\")}\r\n          >\r\n            {props.onErr === \"\" ? (\r\n              <>EDIT DISH</>\r\n            ) : (\r\n              <div className=\"danger-mssg\">{props.onErr}</div>\r\n            )}\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <form>\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <label>Dish Name: {props.row.dishName}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <label>Price: {props.row.price}</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    onChange={(e) => setPhone(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleDish(\"edit-dish\")}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleAddDish(\"edit-dish\")}\r\n            >\r\n              Save changes\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => _handleDelete(props.row._id)}\r\n            >\r\n              Delete Dish\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  } else if (props.title === \"cart-modal\") {\r\n    return (\r\n      <MDBContainer>\r\n        <MDBModal\r\n          disableBackdrop\r\n          isOpen={props.isOpen}\r\n          toggle={props.toggleModal}\r\n          size=\"lg\"\r\n          centered\r\n        >\r\n          <MDBModalHeader\r\n            className=\"modal-title\"\r\n            toggle={() => props.toggleModal()}\r\n          >\r\n            CART\r\n          </MDBModalHeader>\r\n          <MDBModalBody>\r\n            <div className=\"car-header\">\r\n              <div className=\"cart-name\">Dish Name</div>\r\n              <div className=\"cart-number\">Number Of Parcks</div>\r\n              <div className=\"cart-price\">Price(GHC)</div>\r\n              <div className=\"cart-remove-h\">Remove</div>\r\n            </div>\r\n            {props.data.map((dish) => {\r\n              return (\r\n                <div className=\"cart-body\">\r\n                  <div className=\"cart-name\">{dish.dishName}</div>\r\n                  <div className=\"cart-number\">{dish.quantity}</div>\r\n                  <div className=\"cart-price\">{_dishPrice(dish)}</div>\r\n                  <div\r\n                    className=\"cart-remove\"\r\n                    type=\"button\"\r\n                    role=\"button\"\r\n                    onClick={() => props.onRemove(dish._id)}\r\n                  >\r\n                    <i className=\"fa fa-trash-alt\"></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n            <div className=\"cart-body\">\r\n              <div className=\"cart-total\">Totals</div>\r\n              <div className=\"cart-number-t\">{_totalQuantity(props.data)}</div>\r\n              <div className=\"cart-price-t\">{_totalPrice(props.data)}</div>\r\n            </div>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>\r\n            <MDBBtn\r\n              className=\"btn btn-secondary btn-sm\"\r\n              onClick={() => props.toggleModal()}\r\n            >\r\n              Close\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => props.onBuy()}\r\n              style={{paddding:\"2rem\", backgroupColor:\"red\"}}\r\n            >\r\n              Buy\r\n            </MDBBtn>\r\n            <MDBBtn\r\n              className=\"btn btn-success btn-sm\"\r\n              onClick={() => props.onClear()}\r\n            >\r\n              Clear Cart\r\n            </MDBBtn>\r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n","D:\\reactjs\\rest\\food\\src\\main\\app\\component\\print.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":15},{"ruleId":"75","severity":1,"message":"80","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":20},{"ruleId":"75","severity":1,"message":"81","line":10,"column":22,"nodeType":"77","messageId":"78","endLine":10,"endColumn":35},{"ruleId":"75","severity":1,"message":"82","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":81,"column":15,"nodeType":"85","endLine":84,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":97,"column":17,"nodeType":"85","endLine":110,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":102,"column":19,"nodeType":"90","endLine":102,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":138,"column":15,"nodeType":"85","endLine":141,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":163,"column":17,"nodeType":"85","endLine":176,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":168,"column":19,"nodeType":"90","endLine":168,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":10,"column":11,"nodeType":"85","endLine":13,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":50,"column":11,"nodeType":"85","endLine":53,"endColumn":13},{"ruleId":"75","severity":1,"message":"91","line":22,"column":10,"nodeType":"77","messageId":"78","endLine":22,"endColumn":13},{"ruleId":"75","severity":1,"message":"92","line":22,"column":15,"nodeType":"77","messageId":"78","endLine":22,"endColumn":21},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Modals' is defined but never used.","Identifier","unusedVar","'title' is assigned a value but never used.","'errMessage' is assigned a value but never used.","'setErrMessage' is assigned a value but never used.","'row' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]